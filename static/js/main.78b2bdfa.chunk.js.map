{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","NavBar","role","HomePage","NotFoundPage","Loader","PersonLink","person","name","sex","slug","PeopleTable","people","selectedPersonSlug","map","born","died","fatherName","motherName","father","mother","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","findPerson","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasLoadingError","setHasLoadingError","hasNoDataError","setHasNoDataError","useParams","useEffect","fetchedPeople","isEmptyResponse","length","currentPerson","catch","finally","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.78b2bdfa.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { FC } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, title }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      },\n    )}\n  >\n    {title}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink title=\"Home\" to=\"/\" />\n          <PageNavLink title=\"People\" to=\"people\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n  selectedPersonSlug?: string;\n};\n\nexport const PeopleTable: FC<Props> = ({ people, selectedPersonSlug = '' }) => {\n  const isSelected = ({ slug }: Person) => slug === selectedPersonSlug;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const {\n            sex,\n            born,\n            slug,\n            died,\n            fatherName,\n            motherName,\n            father,\n            mother,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': isSelected(person),\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {mother ? <PersonLink person={mother} /> : motherName || '-'}\n              </td>\n\n              <td>\n                {father ? <PersonLink person={father} /> : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n        {/* <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/jan-van-brussel-1714\">Jan van Brussel</a>\n          </td>\n\n          <td>m</td>\n          <td>1714</td>\n          <td>1748</td>\n          <td>Joanna van Rooten</td>\n          <td>Jacobus van Brussel</td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/philibert-haverbeke-1907\">Philibert Haverbeke</a>\n          </td>\n\n          <td>m</td>\n          <td>1907</td>\n          <td>1997</td>\n\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/emma-de-milliano-1876\"\n            >\n              Emma de Milliano\n            </a>\n          </td>\n\n          <td>\n            <a href=\"#/people/emile-haverbeke-1877\">Emile Haverbeke</a>\n          </td>\n        </tr>\n\n        <tr data-cy=\"person\" className=\"has-background-warning\">\n          <td>\n            <a href=\"#/people/jan-frans-van-brussel-1761\">\n              Jan Frans van Brussel\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1761</td>\n          <td>1833</td>\n          <td>-</td>\n\n          <td>\n            <a href=\"#/people/jacobus-bernardus-van-brussel-1736\">\n              Jacobus Bernardus van Brussel\n            </a>\n          </td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a className=\"has-text-danger\" href=\"#/people/lievijne-jans-1542\">\n              Lievijne Jans\n            </a>\n          </td>\n\n          <td>f</td>\n          <td>1542</td>\n          <td>1582</td>\n          <td>-</td>\n          <td>-</td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/bernardus-de-causmaecker-1721\">\n              Bernardus de Causmaecker\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1721</td>\n          <td>1789</td>\n\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/livina-haverbeke-1692\"\n            >\n              Livina Haverbeke\n            </a>\n          </td>\n\n          <td>\n            <a href=\"#/people/lieven-de-causmaecker-1696\">\n              Lieven de Causmaecker\n            </a>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nconst findPerson = (people: Person[], name: string) => {\n  return people.find((person) => person.name === name);\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [hasNoDataError, setHasNoDataError] = useState(false);\n  const { slug: selectedPersonSlug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((fetchedPeople) => {\n        const isEmptyResponse = !fetchedPeople.length;\n\n        if (isEmptyResponse !== hasNoDataError) {\n          setHasNoDataError(isEmptyResponse);\n        }\n\n        setPeople(fetchedPeople.map((person) => {\n          const currentPerson = { ...person };\n          const { fatherName, motherName } = person;\n\n          if (motherName) {\n            currentPerson.mother = findPerson(fetchedPeople, motherName);\n          }\n\n          if (fatherName) {\n            currentPerson.father = findPerson(fetchedPeople, fatherName);\n          }\n\n          return currentPerson;\n        }));\n      })\n      .catch(() => setHasLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {hasLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {hasNoDataError && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <PeopleTable\n              people={people}\n              selectedPersonSlug={selectedPersonSlug}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}